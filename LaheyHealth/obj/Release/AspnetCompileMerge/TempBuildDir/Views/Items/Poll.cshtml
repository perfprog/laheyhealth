@model LaheyHealth.ViewModels.QuestionsViewModel

@{
    ViewBag.Title = "Questionnaire";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{ 
    int i = 0;
    int j = 0;    
}


    


<div class="row youAreHere">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h1>
            Questionnaire
        </h1>
        <div class="progress" style="width:100%;">
            <span class="progress-bar progress-bar-success" style="width: @Model.getPercetageOfQuestionsLeft()%;">
            </span>
        </div>
        <h4>Page @Model.get_page_number() of @Model.get_total_pages()</h4>
    </div>
</div>
<!-- Loop through items and show polls acordingly -->
<!-- Insert current scale -->
<div class="row" id="scale">
    <div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
        <h3>
            @Html.DisplayFor(model => model.CurrentScale)
        </h3>
    </div>
    <div class="col-lg-3 col-md-3 col-xs-12 col-sm-12">
        <button style="margin-top:12px;" id="cancel" class="btn btn-danger pull-right">Restart Questionnaire</button>
    </div>
</div>
<div class="row subscale">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 subscale">
        @Html.DisplayFor(model => model.currentSubscale)        
    </div>   
</div>

        <div id="questionnaire" class="row itemArea">

            <!-- Get next four in the LstItems that relate to the scale-->
            @foreach (var item in Model.LstItems)
            {
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  form-group">
                    <!-- Subscale of item -->
                    <!-- Item -->
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">

                            <p class="well item">
                                <b>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </b>
                            </p>
                        </div>
                        <p>

                            <!-- check if skill list is not empty, if it isnt show the title and options -->
                            @if (Model.LstSkill.Count > 0)
                            {

                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 buttonSelection">
                                    <!-- value type-->
                                    <div class="valueType">
                                        <hr />
                                        <b>
                                            @Html.DisplayFor(skillType => Model.SkillType)
                                        </b>
                                        <hr />
                                    </div>
                                    <!-- Loop through diferent questions that need to be answered (Importance and Skill)-->
                                    <div class="btn-group btn-block" data-toggle="buttons">
                                        @foreach (var skill in Model.LstSkill)
                                        {
                                            
                                            <!-- Options to be selected-->
                                            if (Model.lstSkillValueAnswers.Count > 0 && Model.lstSkillValueAnswers[i] == skill.Id)
                                            {
                                                <!-- if there are answers in the db for this item in the database then set it-->
                                                <label class="btn btn-success btn-group-lg answer active">
                                                    <input class="btn-block" type="radio" autocomplete="off" data-valueType="Skill" name="@item.Id" value="@skill.Id">
                                                    @Html.DisplayFor(skillItem => skill.Label, Model.LastInsertedAnswer)
                                                </label>
                                            }
                                            else
                                            {
                                                <!-- If there are no answers for this item in the database then -->
                                                <label class="btn btn-success btn-group-lg answer">
                                                    <input class="btn-block" type="radio" autocomplete="off" data-valueType="Skill" name="@item.Id" value="@skill.Id">
                                                    @Html.DisplayFor(skillItem => skill.Label, Model.LastInsertedAnswer)
                                                </label>
                                            }
                                        }
                                    </div>
                                </div>
                            }
                            <!-- check if importance list is not empty, if it isnt show the title and options -->
                            @if (Model.LstImportance.Count > 0)
                            {
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 buttonSelection">
                                    <!-- value type-->
                                    <div class="valueType">
                                        <hr />
                                        <b>
                                            @Html.DisplayFor(skillType => Model.ImportanceType)
                                        </b>
                                        <hr />
                                    </div>
                                    <!-- Loop through diferent questions that need to be answered (Importance and Skill)-->
                                    <div class="btn-group btn-block" data-toggle="buttons">
                                        @foreach (var importance in Model.LstImportance)
                                        {
                                        <!-- these will be radio buttons, but for now we will just leave them as texts-->
                                            if (Model.lstImportanceValueAnswers.Count > 0 && Model.lstImportanceValueAnswers[i] == importance.Id)
                                            {
                                                <label class="btn btn-primary btn-group-lg answer active">
                                                    <input class="btn-block answer" type="radio" autocomplete="off" data-valueType="Importance" name="@item.Id" value="@importance.Id">
                                                    @Html.DisplayFor(importanceItem => importance.Label)
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="btn btn-primary btn-group-lg answer">
                                                    <input class="btn-block answer" type="radio" autocomplete="off" data-valueType="Importance" name="@item.Id" value="@importance.Id">
                                                    @Html.DisplayFor(importanceItem => importance.Label)
                                                </label>
                                            }
                                            
                                        }
                                    </div>
                                </div>
                                i++;
                            }
                        </p>

                    </div>
                </div>
            }


        </div>
        <div class="row">
        <!-- Place to show errors-->
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="alert alert-danger">
                </div>
            </div>
            </div>
        <div class="progress" style="width:100%;">
            <span class="progress-bar progress-bar-success" style="width: @Model.getPercetageOfQuestionsLeft()%;">
            </span>
        </div>

        <div class="row">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
            {
                @Html.AntiForgeryToken()
            }
            @if (Model.get_page_number() != 1)
            {
                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    <a class="btn btn-primary btn-block" href="#" id="previous"><h3>Previous</h3></a>
                </div>


                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    <!-- If poll is not lastPage yet show next button-->
                    @if (Model.lastPage == false)
                    {
                        <a class="btn btn-primary btn-block" href="#" id="next"><h3>Next</h3></a>
                    }
                    else {
                <!-- If poll is lastPage show button to go to results view -->
                        <a class="btn btn-warning btn-block" href="#" id="finish"><h3>Finish and Review Results</h3></a>
                    }
                </div>
            }
            else
            {
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- If poll is not lastPage yet show next button-->
                    @if (Model.lastPage == false)
                    {
                        <a class="btn btn-primary btn-block" href="#" id="next"><h3>Next</h3></a>
                    }
                    else {
                <!-- If poll is lastPage show button to go to results view -->
                        <a class="btn btn-warning btn-block" href="#" id="finish"><h3>Finish and Review Results</h3></a>
                    }
                </div>
            }
        
        </div>
        <div class="modal fade" id="cancelModal" tabindex="-1" role="dialog" aria-labelledby="cancelModal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h1 class="modal-title text-danger" id="myModalLabel">Warning!</h1>
                    </div>
                    <div class="modal-body">
                        If you restart this questionnaire you will lose all of the answers inserted up until this moment.
                    </div>
                    <div class="modal-footer">
                        @Html.ActionLink("Restart Questionnaire", "RestartPoll", "Poll", new { @class = "btn btn-danger" })
                        <button type="button" class="btn btn-success" data-dismiss="modal">Continue with Questionnaire</button>
                    </div>
                </div>
            </div>
        </div>


@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            //Load page to poll questions
            $('html, body').animate({ scrollTop: $('#questionnaire').offset().top }, 1000);


            $("#cancel").unbind("click");
            $("#cancel").on("click", generateReport);
        });

        function generateReport() {
            //Show modal with warning message
            $("#cancelModal").modal('show');
        }
    </script>
}
